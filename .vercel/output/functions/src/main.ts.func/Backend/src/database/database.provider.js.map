{"version":3,"file":"database.provider.ts","sources":["/Users/macbook/Documents/Datisekai/movie-app/Backend/src/database/database.provider.ts"],"names":[],"mappings":";;;AAAA,qCAAqC;AAExB,QAAA,iBAAiB,GAAG;IAC/B;QACE,OAAO,EAAE,aAAa;QACtB,UAAU,EAAE,KAAK,IAAI,EAAE;YACrB,MAAM,UAAU,GAAG,IAAI,oBAAU,CAAC;gBAChC,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;gBACzB,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;gBAC7B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;gBACjC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;gBAC7B,QAAQ,EAAE,CAAC,SAAS,GAAG,0BAA0B,CAAC;gBAClD,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;YAEH,OAAO,UAAU,CAAC,UAAU,EAAE,CAAC;QACjC,CAAC;KACF;CACF,CAAC","sourcesContent":["import { DataSource } from 'typeorm';\n\nexport const databaseProviders = [\n  {\n    provide: 'DATA_SOURCE',\n    useFactory: async () => {\n      const dataSource = new DataSource({\n        type: 'mysql',\n        host: process.env.DB_HOST,\n        port: 3306,\n        username: process.env.DB_USER,\n        password: process.env.DB_PASSWORD,\n        database: process.env.DB_NAME,\n        entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n        synchronize: true,\n      });\n\n      return dataSource.initialize();\n    },\n  },\n];\n"]}